p><strong>MANOJ MADDURI                                                                                             </strong></p><p><strong>Email ID: manojmadduri835@gmail.com</strong></p><p><strong>Contact: 678-404-2204  </strong></p><p><strong>LinkedIn:  </strong><a href="https://www.linkedin.com/in/manoj-m263833/"><strong>https://www.linkedin.com/in/manoj-m263833/</strong></a><strong>                                                                       </strong></p><p><strong>GitHub: </strong><a href="https://github.com/manojmadduri"><strong>https://github.com/manojmadduri</strong></a><strong>                                                                                                                </strong></p><p><strong>Portfolio: </strong><a href="https://manojmadduri.github.io/Portfolio.github.io/"><strong>https://manojmadduri.github.io/Portfolio.github.io/</strong></a><strong>                                                             </strong></p><h1><strong>PROFESSIONAL SUMMARY</strong></h1><p>Over 8+ years of expertise in Core Java and J2EE, specializing in robust back-end development, performance optimization, and cross-platform software solutions. Proficient in Java-based system integration, multithreading, and advanced Java features such as streams and lambda expressions to enhance application efficiency and scalability.</p><ul><li>Experience in using Kibana and Splunk for dashboard for log data and creating charts for analysis. Proficient in implementing ELK (elastic search, Logstash, Kibana) for searching and server-side data processing pipeline to ingest data from multiple sources simultaneously.</li><li>Extensive experience in data engineering using PySpark for ETL processes, ensuring efficient data transformation and analysis.</li><li>Hands on experience in publisher and subscriber model with queues (JMS with active MQS, IBMQ). Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.</li><li>Proficient in developing scalable ETL frameworks using PySpark for batch processing, enabling real-time data insights and analytics.</li><li>Create a Java Lambda that watches an AWS S3 bucket, load the data to the Redshift and send a message using RESTful web services if the file has errors.</li><li>Good experience with automated Java based logging frameworks like log4J, sl4J, log-common.</li><li>Experience in developing using RESTful Web services using JAX-RS API and Jersey framework. Developed Restful services with JAX-RS with Spring REST.</li><li>Experience in SOAP using JAX-WS API ad Apache CXF framework and automated the documentation using Swagger and WSDL.</li><li>Designed and implemented full-stack applications integrating generative AI models (such as GPT, GANs, or VAEs) for content generation, recommendation systems, and user interaction.</li><li>Experience in developing various Web applications using Monolithic architecture using the technologies like Servlets, JSP, Structs, JSF, Spring I/O, Spring REST, Spring Security.</li><li>Expertise in working with JAVA8 features like Functional Interfaces, Lambda functions, Stream API, Time API, Transaction Management, Exception Handling, Collection API.</li><li>Proficient in implementation of spring frameworks like Spring MVC, Spring IOC/DI, Spring REST, Spring AOP, Spring Transaction Management, Spring Data, Spring DAO, Spring Batch.</li><li>Good knowledge of configuration management in Spring cloud using Zookeeper. Expertise in using Spring Cloud-Netflix OSS stack for micro services deployment and auto configurations like Ribbon for client-side Load balancing.</li><li>Expertise in implementing Spring JTA for transaction management and Spring JDBC to interact with Databases.</li><li>Strong Experience in working with JAVA based testing frameworks like Junit, Selenium, TestNG, Mockito, Spock, and Cucumber, Power mock, Mock Mvc, etc.</li><li>Experience in working with various version controlling tools like Git, SVN, Bit buckets, TFS, CVS and different Project management tools like JIRA, Rally, Microsoft Project.</li><li>Led the development of end-to-end AI-driven applications, incorporating backend (Node.js, Python/Django) and frontend (React, Angular, Vue.js) technologies.</li><li>Strong experience in working with Relational databases like Oracle, MySQL, Microsoft SQL Server, PostgreSQL, IBM DB2 etc. NoSQL databases like MongoDB, Couch DB, Gem Fire, Redis, HBase etc.</li><li>Great knowledge of writing PL/SQL scripts for executing more than one query at a time. Proficient in creating views for tables, writing stored procedures, writing Triggers.</li><li>Experience in using Mongoose connectors for mapping pure JavaScript objects to the MongoDB. Great understanding of Apache Cassandra driver for Node Js for Parallel Execution, request pipelining.</li><li>Experience in developing User Interface with different technologies like HTML5, CSS3, Java Script. Developed applications with AJAX for handling asynchronous calls that follows W3C Web standards.</li><li>Hands-on experience working with NodeJS platform and using NPM for library management and BOWER for dependency management.</li><li>Experience in using JavaScript testing frameworks like Karma, Jasmine, Protractor for Angular and Mocha and chai for React Js and Node JS.</li><li>Strong working knowledge on deploying the pivotal cloud foundry to deploy PAAS (Platform as a service) , IAAS (Infrastructure as a service) and to run own applications.</li><li>Skilled in Python with using new tools and technical developments (libraries used: libraries - Beautiful Soup, Jasy, numpy, Scipy, matplotlib, Pickle, PySide, Pandas data frame, network , urllib2, Py chart, High charts) to drive improvements throughout entire SDLC.</li><li>Experience with Design, code, and debug operations, reporting, data analysis and web applications utilizing Python.</li><li>Very strong experience writing API's/ and Web Services in Python.</li><li>Experience in Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation.</li><li>Good knowledge of implementing MVC architecture on client side using AngularJS, React with redux, React with flux, Backbone JS, Ext JS, knockout JS.</li><li>Expertise in implementing MVVM architecture on client side using Angular and above versions with typescript 2.7.</li><li>Expertise in working with Hapi.JS to build reusable application logic by avoiding spending time on building infrastructure.</li><li>Strong knowledge in working with CloudFormation Templates, EC2 instance types, Inbound/Outbound security groups, S3 buckets, IAM policies, CloudWatch, Lambda, Route53, subnets, VPC, GIT, Bitbucket and Bamboo to spin up EMR clusters with necessary requirements.</li><li>Actively worked on enabling ssl for Hadoop services in EMR.</li><li>Good understanding of hive authorizations and presto integration with hive on EMR platform.</li><li>Experience in configuring and deploying applications on different application servers like Apache Tomcat, WebLogic, IBM WebSphere, JBoss and web servers like Apache HTTP Server, Nginx, Caddy etc.</li><li>Experience in using automation build tools like Bamboo, Jenkins, Go CD at server level and Maven, ANT, Gradle at development level (local).</li><li>Good knowledge of Working on cloud Amazon Web Services (Amazon EC2, Amazon S3, Amazon simple DB, Amazon Elastic Load Balancing, Amazon SQS, Amazon EBS and Amazon cloud front) </li><li>Expertise knowledge of creating instances using Amazon EC2 and using lambda server less programming. Proficient in using Aws Elastic Beanstalk for handling capacity provisioning and monitoring application.</li><li>Deployed the Zero Down Deployment using Kubernetes orchestration service application. Automated the deployment process by integrating code repository using build pipe line Jenkins, Bamboo and Go CD for continuous deployment.</li></ul><p><strong>TECHNICAL SKILLS</strong></p><table><tr><td><p><strong>Programming Languages</strong></p></td><td><p>C, C++, Java, PL/SQL, Python</p></td></tr><tr><td><p><strong>JavaScript Frameworks</strong></p></td><td><p>Angular JS, Angular 6+, jQuery, Node.js, D3.js, Backbone.js, React.js, StencilJS, Express.js, Ember.js, Handlebars.JS,Next.js</p></td></tr><tr><td><p><strong>Java/J2EE Technologies</strong></p></td><td><p>Servlets, Spring, EJB, JPA, JTA, JDBC, JSP, Thyme leaf, JSTL, Java 8</p></td></tr><tr><td><p><strong>Frameworks</strong></p></td><td><p>Struts 2.0/1.0, Hibernate 4.x/3.x, Spring 3.0, Spring Batch, Spring Security, Spring AOP, Spring Core, JSF, iBATIS, Spring IOC, Camunda BPM,Glue</p></td></tr><tr><td><p><strong>Web Technologies</strong></p></td><td><p>HTML, HTML5, CSS/CSS3, AJAX, jQuery, Bootstrap, XML, Grunt, Gulp, JSON.</p></td></tr><tr><td><p><strong>Database</strong></p></td><td><p>SQL Server, MySQL, Oracle, Mongo DB, DB2,Jasper</p></td></tr><tr><td><p><strong>Cloud Technologies</strong></p></td><td><p>Amazon EC2, S3, simple DB, Elastic Load Balancing, SQS, EBS, cloud front,GCP, EKS and PCF.</p></td></tr><tr><td><p><strong>Web Services</strong></p></td><td><p> XSD, WSDL, Apache Axis, SOAP, Restful, GraphQL, JAX RS, JAX WS</p></td></tr><tr><td><p><strong>Messaging</strong></p></td><td><p>JMS (Java Message Service), IBM MQ, Apache Active MQ, Apache Kafka </p></td></tr><tr><td><p><strong>Web Servers</strong></p></td><td><p>Oracle WebLogic 10.x/9.x, IBM WebSphere 8.x/6.x, Apache Tomcat 8.0/7.x/6.x</p></td></tr><tr><td><p><strong>Application Servers</strong></p></td><td><p>Apache Tomcat, WebLogic, IBM WebSphere, JBoss</p></td></tr><tr><td><p><strong>Methodologies</strong></p></td><td><p>Agile, Waterfall, OOAD, SCRUM</p></td></tr><tr><td><p><strong>Testing Tools</strong></p></td><td><p>JUnit, Mockito, Jasmine, Playwright, Karma, Mocha, Chai, Selenium </p></td></tr><tr><td><p><strong>Version Control</strong></p></td><td><p>SVN, CVS, GIT,GITLAB</p></td></tr><tr><td><p><strong>Build Tools</strong></p></td><td><p>Maven, Gradle, ANT</p></td></tr><tr><td><p><strong>IDEs</strong></p></td><td><p>Eclipse IDE, RAD 6.0/7.0, IntelliJ, IDEA, Spring Tool Suite (STS)</p></td></tr><tr><td><p><strong>Operating Systems</strong></p></td><td><p>Windows, Linux and UNIX</p></td></tr><tr><td><p><strong>Software</strong></p></td><td><p>Visual Studio, Rational Rose and Microsoft Office</p></td></tr></table><p><strong>PROFESSIONAL EXPERIENCE</strong></p><h2><strong>Client: Morgan Stanley, United States --------------01/2023 – present</strong></h2><p><strong>Full Stack Java Developer</strong></p><p><strong>Responsibilities:</strong></p><ul><li>Engineered end-to-end Kafka-based data streaming solutions, enabling real-time data processing and analytics for a high-volume application.</li><li>Developed high-performance Kafka producers and consumers using Core Java, focusing on multithreading and Java concurrency utilities to ensure efficient data handling and real-time processing, ensuring reliable message delivery and consumption across various topics and partitions.</li><li>Designed and implemented Apache Kafka clusters, configuring topic partitions, replication factors, and broker settings for optimal performance and fault tolerance.</li><li>Integrated Splunk for automated logging of error messages, enhancing visibility into system and facilitating proactive issue resolution.</li><li>Designed and utilized default methods in Java 8 interfaces to provide backward compatibility and extend functionality within our code base.</li><li>Running of Apache Hadoop, CDH and Map-R distros, dubbed Elastic Map Reduce (EMR) on (EC2).</li><li>Hands on experience in using various Hadoop distros (Cloudera (CDH 4/CDH 5), Hortonworks, Map-R, IBM Big Insights, Apache and Amazon EMR Hadoop distributions.</li><li>Successfully migrated legacy code from Angular 5 to Angular 6 using ng update and ng add commands, ensuring compatibility with the latest Angular features and improvements.</li><li>Developed custom logging microservices using Angular 6, Node.js, and Oracle DB, providing comprehensive tracking and auditing of user actions on files within the application.</li><li>Implemented secure authentication mechanisms using Angular's HTTP interceptors and HTTP Client, enhancing application security and user privacy.</li><li>Deployed AI models in production using cloud platforms (AWS, GCP, Azure) to scale and manage applications serving generative AI results in real time.</li><li>Experience in working with Docker, Kubernetes, ECS container services and successfully deployed the images in the cloud environment for managing Application.</li><li>Built and Deployed Docker images on AWS ECS and automated the CI-CD pipeline.</li><li>Configured the AWS ALB to route the traffic from target group to right targets on AWS ECS.</li><li>Implemented declarative caching using Spring annotations to improve application performance.</li><li>Implemented SSL/TLS encryption for secure communication within the GemFire cluster.</li><li>Developed ETL processes using PySpark to handle large datasets, transforming raw data into actionable insights.</li><li>Engineered reusable custom elements using Angular Elements in Angular 6, promoting code reusability and maintainability.</li><li>Demonstrated mastery of Java 8 features, including lambda expressions, Stream API, and functional interfaces, to write efficient and maintainable code.</li><li>Leveraged Java 8's Stream API to streamline complex data processing tasks, resulting in code that is both concise and highly performant.</li><li>Created interactive AI features such as chatbots, content creation tools, and recommendation engines that enhance user experience with generative AI</li><li>Involved in the development of front end of the application using Python 2.7, HTML5, CSS3, AJAX, JSON and JQuery.</li><li>Involved in Developing a Restful API'S service using Python Flask framework.</li><li>Developed custom web components using StencilJS, enhancing application modularity and reusability across multiple projects.</li><li>Adoption of StencilJS in the frontend development team, standardizing the creation of UI components that are compliant with Web Components standards.</li><li>Deployed the project into Jenkins using SVN version control system.</li><li>Part of team implementing REST API's in Python using micro-framework like Flask with SQL Alchemy.</li><li>Developed remote integration with third party platforms by using RESTful web services.</li><li>Wrote Python code embedded with JSON and XML to produce HTTP GET request, parsing HTML data from websites.</li><li>Created Python scripts to automate repetitive tasks, enhancing operational efficiency.</li><li>Wrote unit tests and conducted thorough testing of Python code to identify and resolve bugs and issues. </li><li>Implemented lambda expressions to improve code readability and reduce boilerplate code, enhancing the maintainability of event handling and callbacks.</li><li>Collaborated in Agile environments, employing JIRA for task assignment, bug tracking, and sprint planning, resulting in efficient project execution and on-time deliverables.</li><li>Employed GitLab for version control and implemented merge request policies to manage code branches for different environments.</li><li>Implemented end-to-end automated testing frameworks using Playwright for multiple web applications, ensuring high reliability and robustness.</li><li>Developed automated deployment scripts using Bash shell scripting to streamline the deployment process, reducing manual errors and deployment time by 30%.</li><li>Created custom shell scripts to perform routine system administration tasks, such as log rotation, database backups, and log analysis, improving system stability and performance.</li><li>Utilized NGINX as a reverse proxy to efficiently direct requests to different instances of App Service, enhancing application performance and scalability.</li></ul><p><strong>Environment:</strong>  Java, Apache Kafka, Splunk, Angular 6, Node.js, Oracle DB, OAuth 2.0, AWS, AWS Load Balancer, EC2, Amazon Dynamo DB, Swagger, Node-JS, Web pack, ECMA6, Karma and Jasmine, Spring 4.x, Spring Boot, Microservices architecture, Docker, Cassandra DB, Kubernetes</p><h2><strong>Client: UHG, Minnetonka, Minnesota--------------01/2022 – 12/2022</strong></h2><p><strong>Full Stack Java Developer</strong></p><p><strong>Responsibilities:</strong></p><ul><li>Creating webpages according to client guidelines and standards throughout the development and maintenance of the website using HTML, JavaScript, Node JS, React JS, Redux</li><li>Responsible for Style, look and feel of the web page with SASS that extends CSS with dynamic behavior such as variables, mixing, operations, and functions.</li><li>Developed and designed application using React.js and JSP which includes HTML5, CSS3, JavaScript, Node.js. </li><li>Responsible for creating efficient design and developing User Interaction screens / SPA using HTML5, CSS3, Bootstrap, JavaScript, Node.JS, Express.JS and React.JS</li><li>Creating cross-browser compatible and standards-compliant CSS-based page layouts.</li><li>Used Ajax, JSON to send the request to the server to check the functionality of the websites.</li><li>Maintained STATES in the store and dispatched the ACTIONS using Redux.</li><li>Worked with Redux Middleware Redux-Sagas while working with the CRUD operations like GET, POST, PUT and DELETE methods.</li><li>Design and Coding of various JAVA, J2EE modules like Spring Boot, Spring MVC, Spring Rest, Hibernate, JPA, Couch base.</li><li>Developed user interface by using the React JS, Flux/Redux for SPA development.</li><li>Used React JS to create custom components for data manipulations and to display data in company standard format.</li><li>Involved in using ReactJS components, Forms, Events, Keys, Router, Animations and Flux concept.</li><li>Skilled in leading frameworks as React.js to build high-quality, scalable and reusable components and Front-end solution.</li><li>Created Front-end Single Page Applications using semantics in HTML5, CSS3, JavaScript, Bootstrap, ReactJS, NodeJS and MongoDB.</li><li>Involved in Designing and deploying. Used IBM WebSphere Portal Server to deliver highly-personalized social experience to the customers. Responsible for table designs like attributes required, distribution key and sort key and creating DDL in Redshift</li><li>Played a key role in developing and maintaining mission-critical microservices in Go, supporting high-volume data processing and real-time analytics.</li><li>Designed and implemented RESTful APIs to enable seamless communication between microservices, resulting in improved system scalability and performance.</li><li>Utilized go routines and channels for concurrent programming, enhancing the application's responsiveness and efficiency under heavy loads.</li><li>Wrote Python code to simplify lists in Python with list comprehension and Python OOP. Worked with POSTMAN for API testing. Developed REST APIs, and created User Model for application.</li><li>Developed a fully automated continuous integration system using Git, Gerrit, Jenkins, MySQL and custom tools developed in Python and Bash</li><li>Designing solutions on Azure cloud options Clear concepts of Azure Service Management (ASM - Classic) model vs newer (ARM - Azure Resource Management) model and experiencing in setting up RBAC roles (OOB) and Custom RBAC roles to Subscription level, or Resource Manager Level to manage Azure Resources.</li><li>Profound Knowledge in developing HTML5 pages using DIV layout, Web Accessibility and Web Usability. Used Maven as a build tool. Implemented Java to XML binding.</li><li>Collaborated with the UX/UI design team to implement responsive, cross-browser compatible web components using StencilJS, which improved the aesthetic consistency and functionality of the user interface.</li><li>Hands on experience on Azure VPN-Point to Site, Virtual networks, Azure Custom security, end point security and firewall.</li><li>Development web service using Windows Communication Foundation and .Net to receive and process XML files and deploy on Cloud Service on Microsoft Azure.</li><li>Developed views and templates with Python and Django's view controller and template language to create a user-friendly website interface. </li><li>Worked in Cloud based NMS application which monitors the CPU/Memory parameters of Virtual machines.</li><li>Optimized CI/CD pipelines by integrating Playwright tests, achieving faster development cycles and earlier detection of critical issues.</li><li>Performed thorough integration testing on Java test codes, validating the seamless interaction of various components and ensuring robust functionality.</li><li>By effectively combining technical prowess with collaborative teamwork, I played an integral role in delivering high-quality software solutions that aligned with the stringent requirements and standards of the Health industry.</li></ul><p><strong>Environment:</strong> HTML5, CSS3, JavaScript, React JS, React-Native, Redux, ES6, Express.js, Node.js, JSON, Mongo, Web Sockets, Health Industry Standards.</p><h2><strong>Client: Discover Bank, Hyderabad, India --------------05/2018 – 01/2021</strong></h2><p><strong>Full Stack Java Developer</strong></p><h2><strong>Responsibilities:</strong></h2><ul><li>Implemented a Java-based automation framework using Selenium Web-Driver, integrating JUnit and Java assertions to enhance testing processes and ensure robust application performance for multiple platforms and browsers testing. </li><li>Implemented real-time event-driven integrations using MuleSoft's event processing and pub/sub patterns.</li><li>Managed high-volume data processing and ensured data consistency across systems.</li><li>Project code build is done using MAVEN tool.</li><li>Implemented data replication mechanisms to ensure high availability and fault tolerance within the distributed cache.</li><li>Developed and maintained relationships with correspondent banks and financial institutions for SWIFT transactions.</li><li>Used backbone.js as Model, Widgets as Controller and jQuery template as View. </li><li>Responsible for Development of Web page using HTML5, JavaScript, jQuery, React.js, Immutable JS, CSS, SASS/SCSS including Ajax controls and JSON.</li><li>Used Babel as a transpiler, WebPack as the module bundler in React.js and Redux.</li><li>Worked in React JS for creating interactive UI's using One-way data flow, Virtual DOM, JSX, React concepts.</li><li>Developed RESTful Services and Web Service Clients (JAX-RS or JAX-WS) using jersey framework with data representation in different formats such as XML and JSON.</li><li>Used props, states, keys, refs in React.js to build the UI components.</li><li>Participated in front end development using JSF 2.0, JavaScript, HTML 5, CSS 3.0.</li><li>Extensively used CSS and Bootstrap for styling the HTML elements. </li><li>Developed dynamic web pages using HTML5, CSS3, Bootstrap, Less, CSS3 (SASS) and AJAX.</li><li>Used JQuery for view rendering of the web pages.</li><li>Implemented second level cache using Oracle Coherence for IBatis.</li><li>Worked extensively with persistence context (JPA) implemented by IBatis.</li><li>Designed, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the AWS stack (Including EC2, S3).</li><li>Conducted regular audits and reconciliations of ACH and SWIFT transactions to identify discrepancies and ensure accuracy.</li><li>Integrated App Dynamics APM with AWS services and monitored the EC2 instances Banking on APP Dynamics. </li><li>Gulp used for modification of JavaScript files and for monitoring the application.</li><li>Developed a set of the application functionality using CRUD (Create, read, update, delete) features of backbone.js.</li><li>Developed SOAP services with JAX-WS using Apache CXF framework with data representation in XML format.</li><li>Worked with creating WSDL Documentation to act as an agreement between producer and consumer of the Web service.</li><li>Instrumental in the creation of a web application that significantly enhanced the loan application process for military personnel. The application's user-centric design and seamless functionality contributed to improved customer experience and operational efficiency.</li><li>Involved in migrating code from SOAP to RESTful services.</li><li>Written IBatis Criteria queries for data retrievals and have performed the ORM mappings to map java entities to database tables.</li><li>Written Mockito test scripts to automate the unit testing process.</li><li>Worked with Jenkins for Continuous Integration and Continuous Deployment (CI/CD).</li><li>Worked on Docker. Creating docker images and configurations using Docker file, worked with docker cli to build, pull and push images to Docker registry. Created a Docker hub which allows us to link our code repositories.</li></ul><p><strong>Environment:</strong> JAVA, J2EE, Core Java, JSF, AJAX, JavaScript, Apache CXF, Rest Service, Jax-RS, WSDL, JQuery, Karma and jasmine, Multi-Threading, AWS, Jquery, HTML5, CSS3, Ajax, ORACLE, IBatis, Docker, Mockito.</p><h2><strong>Client: NISUM, Hyderabad, India --------------01/2016 – 04/2018</strong></h2><p><strong>Java Developer</strong></p><h2><strong>Responsibilities:</strong></h2><ul><li>Configured Struts-config.xml, Tiles-def.xml, and various properties files provided by Struts Framework for the implementation module.</li><li>Extensively used the Struts tag libraries (Bean Tags, Logic Tags, HTML Tags, etc.) and Custom tag libraries.</li><li>Spearheaded the development of scalable web applications leveraging Core Java with Struts and Spring frameworks, focusing on Java’s exception handling and JDBC to enhance system stability and data integrity. </li><li>Experience in installing, configuring, and deploying applications on Web Logic Server. </li><li>Developed a DAO pattern to retrieve the data from the database.</li><li>We kept up the bean life cycle by utilizing Spring IOC, which keeps session information about beans.</li><li>Implemented responsive web-based applications using HTML5, CSS3, JavaScript, jQuery.</li><li>Developed SCM by using the JSP/HTML for each user interface. Servlets standard validations are used as the controllers for business logic and using JDBC, XML parsing techniques using MVC.</li><li>Designed a mailing application to send notifications to the Oracle users for intimating to start the following workflow.</li><li>Used Multithreading concept to post data from files to tables involving the transformation of files from one format to another.</li><li>Worked with Log4J to capture the log that includes runtime exceptions</li><li>Implemented IBM WebSphere Application Server to deploy the application</li><li>Deployed application on the Client Linux server.</li><li>Used ANT build tool for compiling and generating war files.</li></ul><p><strong>Environment:</strong> Core Java, J2EE, JSP, HTML, MVC, Servlets, Struts, JMS, MDB, EJB3.1, JUnit, PL/SQL, DAO, Web Logic Server, Ant, SOAP, JAX-WS, WSDL, Junit, SQL.</p>